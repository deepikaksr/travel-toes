{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Desktop/PROJECTS/travel-toes/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable'; // Import jsPDF AutoTable plugin for better table formatting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [country, setCountry] = useState('');\n  const [state, setState] = useState('');\n  const [cities, setCities] = useState([{\n    city: '',\n    places: '',\n    totalBudget: ''\n  }]);\n  const [expensePlan, setExpensePlan] = useState(null);\n\n  // Predefined percentages for budget allocation\n  const budgetPercentages = {\n    transport: 0.3,\n    food: 0.3,\n    activities: 0.4\n  };\n\n  // Function to add a new city with its places\n  const handleAddCity = () => {\n    setCities([...cities, {\n      city: '',\n      places: '',\n      totalBudget: ''\n    }]);\n  };\n\n  // Function to handle input changes\n  const handleCityChange = (index, event) => {\n    const newCities = [...cities];\n    newCities[index][event.target.name] = event.target.value;\n    setCities(newCities);\n  };\n\n  // Function to generate the expense planner\n  const handleGeneratePlanner = () => {\n    const plan = cities.map(cityObj => {\n      const totalBudget = parseFloat(cityObj.totalBudget || 0);\n      const transportBudget = (totalBudget * budgetPercentages.transport).toFixed(2);\n      const foodBudget = (totalBudget * budgetPercentages.food).toFixed(2);\n      const activitiesBudget = (totalBudget * budgetPercentages.activities).toFixed(2);\n      const placesArray = cityObj.places.split(',').map(place => place.trim());\n      const perPlaceBudget = (totalBudget / placesArray.length).toFixed(2);\n\n      // Calculate separate budgets for each place\n      const placesBudgetDetails = placesArray.map(place => ({\n        name: place,\n        totalPlaceBudget: perPlaceBudget,\n        transportBudget: (perPlaceBudget * budgetPercentages.transport).toFixed(2),\n        foodBudget: (perPlaceBudget * budgetPercentages.food).toFixed(2),\n        activitiesBudget: (perPlaceBudget * budgetPercentages.activities).toFixed(2)\n      }));\n      return {\n        city: cityObj.city,\n        totalBudget: totalBudget.toFixed(2),\n        transportBudget,\n        foodBudget,\n        activitiesBudget,\n        places: placesBudgetDetails\n      };\n    });\n    setExpensePlan(plan);\n  };\n\n  // Function to download the PDF\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF();\n\n    // Set font style and size\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(14);\n    doc.text(\"Expense Planner\", 14, 20);\n\n    // Set initial Y position for text\n    let yPosition = 30;\n    if (expensePlan) {\n      expensePlan.forEach(cityObj => {\n        doc.setFontSize(12);\n        doc.text(`${cityObj.city} - Total Budget: ₹${cityObj.totalBudget}`, 14, yPosition);\n        yPosition += 10;\n\n        // Prepare data for AutoTable\n        const tableData = cityObj.places.map(place => [place.name, `₹${place.totalPlaceBudget}`, `₹${place.transportBudget}`, `₹${place.foodBudget}`, `₹${place.activitiesBudget}`]);\n\n        // Add table for places\n        doc.autoTable({\n          head: [['Place Name', 'Total Budget', 'Transport', 'Food', 'Activities']],\n          body: tableData,\n          startY: yPosition,\n          theme: 'grid',\n          // Grid theme for better readability\n          styles: {\n            cellPadding: 4,\n            fontSize: 10,\n            overflow: 'linebreak',\n            lineColor: [44, 62, 80],\n            fillColor: [255, 255, 255],\n            textColor: [0, 0, 0],\n            halign: 'left',\n            valign: 'middle'\n          },\n          headStyles: {\n            fillColor: [52, 152, 219],\n            // Light blue for headers\n            textColor: [255, 255, 255],\n            fontSize: 12,\n            halign: 'center',\n            lineWidth: 1,\n            // Add line width for header\n            lineColor: [44, 62, 80] // Line color for vertical lines\n          },\n          didParseCell: data => {\n            // This is to ensure that the first row does not get the blue color\n            if (data.row.index === 0) {\n              data.cell.styles.fillColor = [255, 255, 255]; // Make header background white\n            }\n          },\n          didDrawCell: data => {\n            if (data.column.index !== 0) {\n              doc.setLineWidth(1);\n              doc.line(data.cell.x + data.cell.width, data.cell.y, data.cell.x + data.cell.width, data.cell.y + data.cell.height); // Vertical line\n            }\n          }\n        });\n\n        // Update Y position after the table\n        yPosition = doc.lastAutoTable.finalY + 10; // Add extra space after the table\n      });\n    }\n\n    // Save the PDF\n    doc.save(\"expense_planner.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Travel Toes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your ultimate expense tracker and budget management tool.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Country\",\n        value: country,\n        onChange: e => setCountry(e.target.value),\n        className: \"form-control m-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"State\",\n        value: state,\n        onChange: e => setState(e.target.value),\n        className: \"form-control m-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), cities.map((cityObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          placeholder: \"City\",\n          value: cityObj.city,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"places\",\n          placeholder: \"List of Places (comma-separated)\",\n          value: cityObj.places,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"totalBudget\",\n          placeholder: \"Total Budget\",\n          value: cityObj.totalBudget,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info m-2\",\n        onClick: handleAddCity,\n        children: \"Add Another City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success m-2\",\n        onClick: handleGeneratePlanner,\n        children: \"Generate Expense Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), expensePlan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-plan mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expense Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), expensePlan.map((cityObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-expense mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [cityObj.city, \" - Total Budget: \\u20B9\", cityObj.totalBudget]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), cityObj.places.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"place-expense\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [place.name, \" - Total Budget for Place: \\u20B9\", place.totalPlaceBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Transport: \\u20B9\", place.transportBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Food: \\u20B9\", place.foodBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Activities: \\u20B9\", place.activitiesBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\",\n        style: {\n          marginBottom: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: handleDownloadPDF,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/expense-tracker\",\n        className: \"btn btn-primary m-2\",\n        children: \"Go to Expense Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/budget\",\n        className: \"btn btn-secondary m-2\",\n        children: \"Go to Budget Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GJdDuNibAe2LxvM7XJNga0JNWj0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Link","jsPDF","jsxDEV","_jsxDEV","Home","_s","country","setCountry","state","setState","cities","setCities","city","places","totalBudget","expensePlan","setExpensePlan","budgetPercentages","transport","food","activities","handleAddCity","handleCityChange","index","event","newCities","target","name","value","handleGeneratePlanner","plan","map","cityObj","parseFloat","transportBudget","toFixed","foodBudget","activitiesBudget","placesArray","split","place","trim","perPlaceBudget","length","placesBudgetDetails","totalPlaceBudget","handleDownloadPDF","doc","setFont","setFontSize","text","yPosition","forEach","tableData","autoTable","head","body","startY","theme","styles","cellPadding","fontSize","overflow","lineColor","fillColor","textColor","halign","valign","headStyles","lineWidth","didParseCell","data","row","cell","didDrawCell","column","setLineWidth","line","x","width","y","height","lastAutoTable","finalY","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","onClick","i","style","marginBottom","to","_c","$RefreshReg$"],"sources":["/Users/deepika/Desktop/PROJECTS/travel-toes/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable'; // Import jsPDF AutoTable plugin for better table formatting\n\nconst Home = () => {\n  const [country, setCountry] = useState('');\n  const [state, setState] = useState('');\n  const [cities, setCities] = useState([{ city: '', places: '', totalBudget: '' }]);\n  const [expensePlan, setExpensePlan] = useState(null);\n\n  // Predefined percentages for budget allocation\n  const budgetPercentages = {\n    transport: 0.3,\n    food: 0.3,\n    activities: 0.4\n  };\n\n  // Function to add a new city with its places\n  const handleAddCity = () => {\n    setCities([...cities, { city: '', places: '', totalBudget: '' }]);\n  };\n\n  // Function to handle input changes\n  const handleCityChange = (index, event) => {\n    const newCities = [...cities];\n    newCities[index][event.target.name] = event.target.value;\n    setCities(newCities);\n  };\n\n  // Function to generate the expense planner\n  const handleGeneratePlanner = () => {\n    const plan = cities.map(cityObj => {\n      const totalBudget = parseFloat(cityObj.totalBudget || 0);\n      const transportBudget = (totalBudget * budgetPercentages.transport).toFixed(2);\n      const foodBudget = (totalBudget * budgetPercentages.food).toFixed(2);\n      const activitiesBudget = (totalBudget * budgetPercentages.activities).toFixed(2);\n\n      const placesArray = cityObj.places.split(',').map(place => place.trim());\n      const perPlaceBudget = (totalBudget / placesArray.length).toFixed(2);\n\n      // Calculate separate budgets for each place\n      const placesBudgetDetails = placesArray.map(place => ({\n        name: place,\n        totalPlaceBudget: perPlaceBudget,\n        transportBudget: (perPlaceBudget * budgetPercentages.transport).toFixed(2),\n        foodBudget: (perPlaceBudget * budgetPercentages.food).toFixed(2),\n        activitiesBudget: (perPlaceBudget * budgetPercentages.activities).toFixed(2)\n      }));\n\n      return {\n        city: cityObj.city,\n        totalBudget: totalBudget.toFixed(2),\n        transportBudget,\n        foodBudget,\n        activitiesBudget,\n        places: placesBudgetDetails\n      };\n    });\n\n    setExpensePlan(plan);\n  };\n\n  // Function to download the PDF\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF();\n\n    // Set font style and size\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(14);\n    doc.text(\"Expense Planner\", 14, 20);\n\n    // Set initial Y position for text\n    let yPosition = 30;\n\n    if (expensePlan) {\n      expensePlan.forEach(cityObj => {\n        doc.setFontSize(12);\n        doc.text(`${cityObj.city} - Total Budget: ₹${cityObj.totalBudget}`, 14, yPosition);\n        yPosition += 10;\n\n        // Prepare data for AutoTable\n        const tableData = cityObj.places.map(place => [\n          place.name,\n          `₹${place.totalPlaceBudget}`,\n          `₹${place.transportBudget}`,\n          `₹${place.foodBudget}`,\n          `₹${place.activitiesBudget}`\n        ]);\n\n        // Add table for places\n        doc.autoTable({\n          head: [['Place Name', 'Total Budget', 'Transport', 'Food', 'Activities']],\n          body: tableData,\n          startY: yPosition,\n          theme: 'grid', // Grid theme for better readability\n          styles: {\n            cellPadding: 4,\n            fontSize: 10,\n            overflow: 'linebreak',\n            lineColor: [44, 62, 80],\n            fillColor: [255, 255, 255],\n            textColor: [0, 0, 0],\n            halign: 'left',\n            valign: 'middle'\n          },\n          headStyles: {\n            fillColor: [52, 152, 219], // Light blue for headers\n            textColor: [255, 255, 255],\n            fontSize: 12,\n            halign: 'center',\n            lineWidth: 1, // Add line width for header\n            lineColor: [44, 62, 80], // Line color for vertical lines\n          },\n          didParseCell: (data) => {\n            // This is to ensure that the first row does not get the blue color\n            if (data.row.index === 0) {\n              data.cell.styles.fillColor = [255, 255, 255]; // Make header background white\n            }\n          },\n          didDrawCell: (data) => {\n            if (data.column.index !== 0) {\n              doc.setLineWidth(1);\n              doc.line(data.cell.x + data.cell.width, data.cell.y, data.cell.x + data.cell.width, data.cell.y + data.cell.height); // Vertical line\n            }\n          },\n        });\n\n        // Update Y position after the table\n        yPosition = doc.lastAutoTable.finalY + 10; // Add extra space after the table\n      });\n    }\n\n    // Save the PDF\n    doc.save(\"expense_planner.pdf\");\n  };\n\n  return (\n    <div className=\"text-center\">\n      <h1>Welcome to Travel Toes</h1>\n      <p>Your ultimate expense tracker and budget management tool.</p>\n\n      {/* Input form */}\n      <div className=\"input-form\">\n        <input \n          type=\"text\" \n          placeholder=\"Country\" \n          value={country} \n          onChange={(e) => setCountry(e.target.value)} \n          className=\"form-control m-2\"\n        />\n        <input \n          type=\"text\" \n          placeholder=\"State\" \n          value={state} \n          onChange={(e) => setState(e.target.value)} \n          className=\"form-control m-2\"\n        />\n\n        {/* Cities input */}\n        {cities.map((cityObj, index) => (\n          <div key={index} className=\"city-input\">\n            <input \n              type=\"text\" \n              name=\"city\"\n              placeholder=\"City\" \n              value={cityObj.city} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n            <input \n              type=\"text\" \n              name=\"places\"\n              placeholder=\"List of Places (comma-separated)\" \n              value={cityObj.places} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n            <input \n              type=\"number\" \n              name=\"totalBudget\"\n              placeholder=\"Total Budget\" \n              value={cityObj.totalBudget} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n          </div>\n        ))}\n\n        <button className=\"btn btn-info m-2\" onClick={handleAddCity}>\n          Add Another City\n        </button>\n\n        <button className=\"btn btn-success m-2\" onClick={handleGeneratePlanner}>\n          Generate Expense Planner\n        </button>\n      </div>\n\n      {/* Display the generated expense plan */}\n      {expensePlan && (\n        <div className=\"expense-plan mt-4\">\n          <h3>Expense Planner</h3>\n          {expensePlan.map((cityObj, index) => (\n            <div key={index} className=\"city-expense mb-4\">\n              <h4>{cityObj.city} - Total Budget: ₹{cityObj.totalBudget}</h4>\n\n              {/* Breakdown of budget for each place */}\n              {cityObj.places.map((place, i) => (\n                <div key={i} className=\"place-expense\">\n                  <h5>\n                    {place.name} - Total Budget for Place: ₹{place.totalPlaceBudget}\n                  </h5>\n                  <p>Transport: ₹{place.transportBudget}</p>\n                  <p>Food: ₹{place.foodBudget}</p>\n                  <p>Activities: ₹{place.activitiesBudget}</p>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          {/* Add spacing below the generated planner */}\n          <div className=\"spacer\" style={{ marginBottom: '50px' }}></div>\n          \n          {/* Download PDF button */}\n          <button className=\"btn btn-primary m-2\" onClick={handleDownloadPDF}>\n            Download PDF\n          </button>\n        </div>\n      )}\n\n      {/* Add space between the generated planner and buttons */}\n      <div className=\"navigation-buttons mt-5\">\n        <Link to=\"/expense-tracker\" className=\"btn btn-primary m-2\">\n          Go to Expense Tracker\n        </Link>\n        <Link to=\"/budget\" className=\"btn btn-secondary m-2\">\n          Go to Budget Management\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}