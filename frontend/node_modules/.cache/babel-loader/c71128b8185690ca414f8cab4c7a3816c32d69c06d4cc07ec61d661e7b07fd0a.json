{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/ExpenseTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Filler, Tooltip, Legend, ArcElement } from 'chart.js';\n\n// Register necessary chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Filler, Tooltip, Legend, ArcElement);\nconst ExpenseTracker = ({\n  userId\n}) => {\n  _s();\n  const [date, setDate] = useState('');\n  const [expenses, setExpenses] = useState({});\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [category, setCategory] = useState('Food');\n  const [customCategory, setCustomCategory] = useState('');\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [editingDate, setEditingDate] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const [dates, setDates] = useState([new Date().toISOString().split(\"T\")[0]]); // Initialize with today's date\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch expenses');\n        }\n        const data = await response.json();\n        setExpenses(data.expenses);\n        setTotalExpenses(data.totalExpenses);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n    fetchExpenses();\n  }, [userId]);\n  const handleDateChange = event => {\n    setDate(event.target.value);\n  };\n  const handleAddDate = () => {\n    const nextDate = new Date(dates[dates.length - 1]);\n    nextDate.setDate(nextDate.getDate() + 1); // Add one day\n    const formattedDate = nextDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\n    setDates([...dates, formattedDate]);\n    setDate(formattedDate); // Set new date to the selected date\n  };\n  const handleAddExpense = async event => {\n    event.preventDefault();\n    const amountValue = parseFloat(amount);\n    const categoryToUse = category === 'Other' ? customCategory : category;\n    if (date && !isNaN(amountValue) && categoryToUse) {\n      const newExpenses = {\n        ...expenses\n      };\n      if (!newExpenses[date]) {\n        newExpenses[date] = [];\n      }\n      if (editingExpense) {\n        const previousAmount = newExpenses[editingExpense.date][editingExpense.index].amount;\n        newExpenses[editingExpense.date][editingExpense.index] = {\n          amount: amountValue,\n          category: categoryToUse\n        };\n        setEditingExpense(null);\n        setTotalExpenses(prevTotal => prevTotal - previousAmount + amountValue);\n      } else {\n        newExpenses[date].push({\n          amount: amountValue,\n          category: categoryToUse\n        });\n        setTotalExpenses(prevTotal => prevTotal + amountValue);\n      }\n      setExpenses(newExpenses);\n\n      // Save to backend (create or update)\n      const savedExpense = await saveExpenseToBackend({\n        date,\n        amount: amountValue,\n        category: categoryToUse\n      });\n      if (savedExpense) {\n        resetForm();\n      }\n    } else {\n      console.error('Missing required fields');\n    }\n  };\n  const saveExpenseToBackend = async expense => {\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: editingExpense ? 'PUT' : 'POST',\n        // Use POST for create, PUT for update\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(expense)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save expense');\n      }\n      return await response.json(); // Optionally return the saved expense data\n    } catch (error) {\n      console.error('Error saving expense:', error);\n    }\n  };\n  const handleEditExpense = (date, index) => {\n    const expenseToEdit = expenses[date][index];\n    setEditingExpense({\n      date,\n      index\n    });\n    setAmount(expenseToEdit.amount);\n    setCategory(expenseToEdit.category);\n    if (expenseToEdit.category === 'Other') {\n      setCustomCategory(expenseToEdit.category);\n    } else {\n      setCustomCategory('');\n    }\n  };\n  const handleDeleteExpense = async (date, index) => {\n    const expenseToDelete = expenses[date][index];\n    const updatedExpenses = {\n      ...expenses\n    };\n    updatedExpenses[date].splice(index, 1); // Remove the selected expense\n\n    // Update the total expenses\n    setTotalExpenses(prevTotal => prevTotal - expenseToDelete.amount);\n    setExpenses(updatedExpenses);\n\n    // Delete from backend\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date,\n          amount: expenseToDelete.amount,\n          category: expenseToDelete.category\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete expense');\n      }\n    } catch (error) {\n      console.error('Error deleting expense:', error);\n    }\n  };\n  const handleEditDate = oldDate => {\n    setEditingDate(oldDate);\n    setDate(oldDate); // Populate the current date in the date input for editing\n  };\n  const handleUpdateDate = async newDate => {\n    if (newDate && editingDate && expenses[editingDate]) {\n      // Move expenses from the old date to the new date\n      const updatedExpenses = {\n        ...expenses\n      };\n      updatedExpenses[newDate] = updatedExpenses[editingDate];\n      delete updatedExpenses[editingDate];\n      setExpenses(updatedExpenses);\n      setEditingDate(null);\n\n      // Update in backend\n      try {\n        const response = await fetch(`/api/expenses/${userId}/date`, {\n          method: 'PUT',\n          // Use PUT for date update\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            oldDate: editingDate,\n            newDate\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update date');\n        }\n      } catch (error) {\n        console.error('Error updating date:', error);\n      }\n    }\n  };\n  const handleDeleteDate = async dateToDelete => {\n    const updatedExpenses = {\n      ...expenses\n    };\n    const dateExpenses = updatedExpenses[dateToDelete];\n    if (!dateExpenses) return; // If no expenses, do nothing\n\n    delete updatedExpenses[dateToDelete]; // Remove the date and its expenses\n\n    setExpenses(updatedExpenses);\n\n    // Update total expenses\n    const totalRemoved = dateExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n    setTotalExpenses(prevTotal => prevTotal - totalRemoved);\n\n    // Delete from backend\n    try {\n      const response = await fetch(`/api/expenses/${userId}/date`, {\n        method: 'DELETE',\n        // Use DELETE to remove date and its expenses\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: dateToDelete\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete date');\n      }\n    } catch (error) {\n      console.error('Error deleting date:', error);\n    }\n  };\n  const resetForm = () => {\n    setAmount(0);\n    setCategory('Food');\n    setCustomCategory('');\n    setEditingExpense(null);\n    setEditingDate(null);\n    setDate('');\n  };\n  const dailyTotals = Object.entries(expenses).map(([date, expenseList]) => {\n    const dailyTotal = expenseList.reduce((sum, expense) => sum + expense.amount, 0);\n    return {\n      date,\n      total: dailyTotal,\n      expenses: expenseList\n    };\n  });\n  const lineChartData = {\n    labels: dailyTotals.map(entry => entry.date),\n    datasets: [{\n      label: 'Daily Spending',\n      data: dailyTotals.map(entry => entry.total),\n      fill: true,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      tension: 0.4\n    }]\n  };\n  const categoryTotals = {};\n  dailyTotals.forEach(entry => {\n    entry.expenses.forEach(expense => {\n      if (!categoryTotals[expense.category]) {\n        categoryTotals[expense.category] = 0;\n      }\n      categoryTotals[expense.category] += expense.amount;\n    });\n  });\n  const pieChartData = {\n    labels: Object.keys(categoryTotals),\n    datasets: [{\n      data: Object.values(categoryTotals),\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)']\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        className: \"form-label\",\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        className: \"form-control\",\n        value: date,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mb-3\",\n      onClick: handleAddDate,\n      children: \"Add Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddExpense,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          className: \"form-label\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          className: \"form-control\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          className: \"form-label\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          className: \"form-control\",\n          value: category,\n          onChange: e => {\n            const selectedCategory = e.target.value;\n            setCategory(selectedCategory);\n            setCustomCategory(selectedCategory === 'Other' ? '' : '');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Transport\",\n            children: \"Transport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Accommodation\",\n            children: \"Accommodation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), category === 'Other' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Custom Category\",\n          className: \"form-control\",\n          value: customCategory,\n          onChange: e => setCustomCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: editingExpense ? 'Update Expense' : 'Add Expense'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), dailyTotals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Daily Expense Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: dailyTotals.map(({\n          date,\n          total,\n          expenses\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), \": \\u20B9\", total.toFixed(2), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link ms-2\",\n            onClick: () => handleEditDate(date),\n            children: \"Edit Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link text-danger ms-2\",\n            onClick: () => handleDeleteDate(date),\n            children: \"Delete Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: expenses.map((expense, expIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [expense.category, \": \\u20B9\", expense.amount.toFixed(2), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link ms-2\",\n                onClick: () => handleEditExpense(date, expIndex),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link text-danger ms-2\",\n                onClick: () => handleDeleteExpense(date, expIndex),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this)]\n            }, expIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Expenses: \\u20B9\", totalExpenses.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Spending Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: lineChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Category Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tips for Better Expense Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: tips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: tip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseTracker, \"pp6nZ+E0WK1O+5c+qmNdPh6EwFQ=\");\n_c = ExpenseTracker;\nexport default ExpenseTracker;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTracker\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Filler","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","ExpenseTracker","userId","_s","date","setDate","expenses","setExpenses","totalExpenses","setTotalExpenses","category","setCategory","customCategory","setCustomCategory","editingExpense","setEditingExpense","editingDate","setEditingDate","amount","setAmount","dates","setDates","Date","toISOString","split","fetchExpenses","response","fetch","ok","Error","data","json","error","console","handleDateChange","event","target","value","handleAddDate","nextDate","length","getDate","formattedDate","handleAddExpense","preventDefault","amountValue","parseFloat","categoryToUse","isNaN","newExpenses","previousAmount","index","prevTotal","push","savedExpense","saveExpenseToBackend","resetForm","expense","method","headers","body","JSON","stringify","handleEditExpense","expenseToEdit","handleDeleteExpense","expenseToDelete","updatedExpenses","splice","handleEditDate","oldDate","handleUpdateDate","newDate","handleDeleteDate","dateToDelete","dateExpenses","totalRemoved","reduce","sum","dailyTotals","Object","entries","map","expenseList","dailyTotal","total","lineChartData","labels","entry","datasets","label","fill","borderColor","backgroundColor","tension","categoryTotals","forEach","pieChartData","keys","values","chartOptions","responsive","plugins","legend","display","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","onSubmit","e","required","selectedCategory","placeholder","toFixed","expIndex","style","height","options","tips","tip","_c","$RefreshReg$"],"sources":["/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/ExpenseTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\n\n// Register necessary chart components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nconst ExpenseTracker = ({ userId }) => {\n  const [date, setDate] = useState('');\n  const [expenses, setExpenses] = useState({});\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [category, setCategory] = useState('Food');\n  const [customCategory, setCustomCategory] = useState('');\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [editingDate, setEditingDate] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const [dates, setDates] = useState([new Date().toISOString().split(\"T\")[0]]); // Initialize with today's date\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch expenses');\n        }\n        const data = await response.json();\n        setExpenses(data.expenses);\n        setTotalExpenses(data.totalExpenses);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n\n    fetchExpenses();\n  }, [userId]);\n\n  const handleDateChange = (event) => {\n    setDate(event.target.value);\n  };\n\n  const handleAddDate = () => {\n    const nextDate = new Date(dates[dates.length - 1]);\n    nextDate.setDate(nextDate.getDate() + 1); // Add one day\n    const formattedDate = nextDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\n    setDates([...dates, formattedDate]);\n    setDate(formattedDate); // Set new date to the selected date\n  };\n\n  const handleAddExpense = async (event) => {\n    event.preventDefault();\n    const amountValue = parseFloat(amount);\n    const categoryToUse = category === 'Other' ? customCategory : category;\n\n    if (date && !isNaN(amountValue) && categoryToUse) {\n      const newExpenses = { ...expenses };\n      if (!newExpenses[date]) {\n        newExpenses[date] = [];\n      }\n\n      if (editingExpense) {\n        const previousAmount = newExpenses[editingExpense.date][editingExpense.index].amount;\n        newExpenses[editingExpense.date][editingExpense.index] = {\n          amount: amountValue,\n          category: categoryToUse,\n        };\n        setEditingExpense(null);\n        setTotalExpenses(prevTotal => prevTotal - previousAmount + amountValue);\n      } else {\n        newExpenses[date].push({ amount: amountValue, category: categoryToUse });\n        setTotalExpenses(prevTotal => prevTotal + amountValue);\n      }\n\n      setExpenses(newExpenses);\n\n      // Save to backend (create or update)\n      const savedExpense = await saveExpenseToBackend({ date, amount: amountValue, category: categoryToUse });\n      if (savedExpense) {\n        resetForm();\n      }\n    } else {\n      console.error('Missing required fields');\n    }\n  };\n\n  const saveExpenseToBackend = async (expense) => {\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: editingExpense ? 'PUT' : 'POST',  // Use POST for create, PUT for update\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(expense),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save expense');\n      }\n\n      return await response.json(); // Optionally return the saved expense data\n    } catch (error) {\n      console.error('Error saving expense:', error);\n    }\n  };\n\n  const handleEditExpense = (date, index) => {\n    const expenseToEdit = expenses[date][index];\n    setEditingExpense({ date, index });\n    setAmount(expenseToEdit.amount);\n    setCategory(expenseToEdit.category);\n    if (expenseToEdit.category === 'Other') {\n      setCustomCategory(expenseToEdit.category);\n    } else {\n      setCustomCategory('');\n    }\n  };\n\n  const handleDeleteExpense = async (date, index) => {\n    const expenseToDelete = expenses[date][index];\n    const updatedExpenses = { ...expenses };\n    updatedExpenses[date].splice(index, 1);  // Remove the selected expense\n\n    // Update the total expenses\n    setTotalExpenses(prevTotal => prevTotal - expenseToDelete.amount);\n    setExpenses(updatedExpenses);\n\n    // Delete from backend\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ date, amount: expenseToDelete.amount, category: expenseToDelete.category }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete expense');\n      }\n    } catch (error) {\n      console.error('Error deleting expense:', error);\n    }\n  };\n\n  const handleEditDate = (oldDate) => {\n    setEditingDate(oldDate);\n    setDate(oldDate); // Populate the current date in the date input for editing\n  };\n\n  const handleUpdateDate = async (newDate) => {\n    if (newDate && editingDate && expenses[editingDate]) {\n      // Move expenses from the old date to the new date\n      const updatedExpenses = { ...expenses };\n      updatedExpenses[newDate] = updatedExpenses[editingDate];\n      delete updatedExpenses[editingDate];\n\n      setExpenses(updatedExpenses);\n      setEditingDate(null);\n\n      // Update in backend\n      try {\n        const response = await fetch(`/api/expenses/${userId}/date`, {\n          method: 'PUT', // Use PUT for date update\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ oldDate: editingDate, newDate }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to update date');\n        }\n      } catch (error) {\n        console.error('Error updating date:', error);\n      }\n    }\n  };\n\n  const handleDeleteDate = async (dateToDelete) => {\n    const updatedExpenses = { ...expenses };\n    const dateExpenses = updatedExpenses[dateToDelete];\n\n    if (!dateExpenses) return; // If no expenses, do nothing\n\n    delete updatedExpenses[dateToDelete];  // Remove the date and its expenses\n\n    setExpenses(updatedExpenses);\n\n    // Update total expenses\n    const totalRemoved = dateExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n    setTotalExpenses(prevTotal => prevTotal - totalRemoved);\n\n    // Delete from backend\n    try {\n      const response = await fetch(`/api/expenses/${userId}/date`, {\n        method: 'DELETE', // Use DELETE to remove date and its expenses\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ date: dateToDelete }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete date');\n      }\n    } catch (error) {\n      console.error('Error deleting date:', error);\n    }\n  };\n\n  const resetForm = () => {\n    setAmount(0);\n    setCategory('Food');\n    setCustomCategory('');\n    setEditingExpense(null);\n    setEditingDate(null);\n    setDate('');\n  };\n\n  const dailyTotals = Object.entries(expenses).map(([date, expenseList]) => {\n    const dailyTotal = expenseList.reduce((sum, expense) => sum + expense.amount, 0);\n    return { date, total: dailyTotal, expenses: expenseList };\n  });\n\n  const lineChartData = {\n    labels: dailyTotals.map(entry => entry.date),\n    datasets: [\n      {\n        label: 'Daily Spending',\n        data: dailyTotals.map(entry => entry.total),\n        fill: true,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const categoryTotals = {};\n  dailyTotals.forEach(entry => {\n    entry.expenses.forEach(expense => {\n      if (!categoryTotals[expense.category]) {\n        categoryTotals[expense.category] = 0;\n      }\n      categoryTotals[expense.category] += expense.amount;\n    });\n  });\n\n  const pieChartData = {\n    labels: Object.keys(categoryTotals),\n    datasets: [\n      {\n        data: Object.values(categoryTotals),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.6)',\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(255, 206, 86, 0.6)',\n          'rgba(75, 192, 192, 0.6)',\n          'rgba(153, 102, 255, 0.6)',\n          'rgba(255, 159, 64, 0.6)',\n        ],\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n      },\n    },\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 className=\"mb-4\">Expense Tracker</h2>\n      <div className=\"mb-3\">\n        <label htmlFor=\"date\" className=\"form-label\">Date:</label>\n        <input\n          type=\"date\"\n          id=\"date\"\n          className=\"form-control\"\n          value={date}\n          onChange={handleDateChange}\n        />\n      </div>\n      <button className=\"btn btn-secondary mb-3\" onClick={handleAddDate}>\n        Add Date\n      </button>\n\n      <form onSubmit={handleAddExpense}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"amount\" className=\"form-label\">Amount:</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            className=\"form-control\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"category\" className=\"form-label\">Category:</label>\n          <select\n            id=\"category\"\n            className=\"form-control\"\n            value={category}\n            onChange={(e) => {\n              const selectedCategory = e.target.value;\n              setCategory(selectedCategory);\n              setCustomCategory(selectedCategory === 'Other' ? '' : '');\n            }}\n          >\n            <option value=\"Food\">Food</option>\n            <option value=\"Transport\">Transport</option>\n            <option value=\"Accommodation\">Accommodation</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n\n        {category === 'Other' && (\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Custom Category\"\n              className=\"form-control\"\n              value={customCategory}\n              onChange={(e) => setCustomCategory(e.target.value)}\n            />\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          {editingExpense ? 'Update Expense' : 'Add Expense'}\n        </button>\n      </form>\n\n      {dailyTotals.length > 0 && (\n        <div className=\"mt-4\">\n          <h4>Daily Expense Summary</h4>\n          <ul className=\"list-group\">\n            {dailyTotals.map(({ date, total, expenses }) => (\n              <li key={date} className=\"list-group-item\">\n                <strong>{date}</strong>: ₹{total.toFixed(2)}\n                <button\n                  className=\"btn btn-link ms-2\"\n                  onClick={() => handleEditDate(date)}\n                >\n                  Edit Date\n                </button>\n                <button\n                  className=\"btn btn-link text-danger ms-2\"\n                  onClick={() => handleDeleteDate(date)}\n                >\n                  Delete Date\n                </button>\n                <ul>\n                  {expenses.map((expense, expIndex) => (\n                    <li key={expIndex}>\n                      {expense.category}: ₹{expense.amount.toFixed(2)}\n                      <button\n                        className=\"btn btn-link ms-2\"\n                        onClick={() => handleEditExpense(date, expIndex)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-link text-danger ms-2\"\n                        onClick={() => handleDeleteExpense(date, expIndex)}\n                      >\n                        Delete\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"mt-4\">\n        <h4>Total Expenses: ₹{totalExpenses.toFixed(2)}</h4>\n      </div>\n\n      <div className=\"mt-4\">\n        <h4>Spending Trends</h4>\n        <div style={{ height: '300px' }}>\n          <Line data={lineChartData} options={chartOptions} />\n        </div>\n      </div>\n\n      <div className=\"mt-4\">\n        <h4>Category Breakdown</h4>\n        <div style={{ height: '300px' }}>\n          <Pie data={pieChartData} options={chartOptions} />\n        </div>\n      </div>\n\n      <div className=\"mt-4\">\n        <h4>Tips for Better Expense Management</h4>\n        <div className=\"row justify-content-center\">\n          {tips.map((tip, index) => (\n            <div key={index} className=\"col-md-4\">\n              <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                  <p className=\"card-text\">{tip}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}