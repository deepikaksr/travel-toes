{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [country, setCountry] = useState('');\n  const [state, setState] = useState('');\n  const [cities, setCities] = useState([{\n    city: '',\n    places: '',\n    totalBudget: '',\n    days: ''\n  }]);\n  const [expensePlan, setExpensePlan] = useState(null);\n  const budgetPercentages = {\n    transport: 0.3,\n    food: 0.3,\n    activities: 0.4\n  };\n\n  // Fetch expense plan from the backend on mount\n  useEffect(() => {\n    axios.get('/api/expense-plan').then(response => {\n      setExpensePlan(response.data);\n    }).catch(error => {\n      console.error('Error fetching expense plan:', error);\n    });\n  }, []);\n  const handleAddCity = () => {\n    setCities([...cities, {\n      city: '',\n      places: '',\n      totalBudget: '',\n      days: ''\n    }]);\n  };\n  const handleCityChange = (index, event) => {\n    const newCities = [...cities];\n    newCities[index][event.target.name] = event.target.value;\n    setCities(newCities);\n  };\n  const handleGeneratePlanner = () => {\n    const plan = cities.map(cityObj => {\n      const totalBudget = parseFloat(cityObj.totalBudget || 0);\n      const numberOfDays = parseInt(cityObj.days || 1, 10);\n      const perDayBudget = (totalBudget / numberOfDays).toFixed(2);\n      const transportBudget = (perDayBudget * budgetPercentages.transport).toFixed(2);\n      const foodBudget = (perDayBudget * budgetPercentages.food).toFixed(2);\n      const activitiesBudget = (perDayBudget * budgetPercentages.activities).toFixed(2);\n      const placesArray = cityObj.places.split(',').map(place => place.trim());\n      const perPlaceBudget = (totalBudget / placesArray.length).toFixed(2);\n      const placesBudgetDetails = placesArray.map(place => ({\n        name: place,\n        totalPlaceBudget: perPlaceBudget,\n        transportBudget: (perPlaceBudget * budgetPercentages.transport).toFixed(2),\n        foodBudget: (perPlaceBudget * budgetPercentages.food).toFixed(2),\n        activitiesBudget: (perPlaceBudget * budgetPercentages.activities).toFixed(2)\n      }));\n      return {\n        city: cityObj.city,\n        totalBudget: totalBudget.toFixed(2),\n        days: numberOfDays,\n        transportBudget,\n        foodBudget,\n        activitiesBudget,\n        places: placesBudgetDetails\n      };\n    });\n\n    // Save the expense plan in the database\n    axios.post('/api/save-expense-plan', {\n      country,\n      state,\n      plan\n    }).then(response => {\n      console.log('Expense plan saved successfully');\n      setExpensePlan(plan);\n    }).catch(error => {\n      console.error('Error saving expense plan:', error);\n    });\n  };\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(14);\n    doc.text(\"Expense Planner\", 14, 20);\n    let yPosition = 30;\n    if (expensePlan) {\n      expensePlan.forEach(cityObj => {\n        doc.setFontSize(12);\n        doc.text(`${cityObj.city} - Total Budget: ₹${cityObj.totalBudget} for ${cityObj.days} Days`, 14, yPosition);\n        yPosition += 10;\n        const tableData = cityObj.places.map(place => [place.name, `₹${place.totalPlaceBudget}`, `₹${place.transportBudget}`, `₹${place.foodBudget}`, `₹${place.activitiesBudget}`]);\n        doc.autoTable({\n          head: [['Place Name', 'Total Budget', 'Transport', 'Food', 'Activities']],\n          body: tableData,\n          startY: yPosition,\n          theme: 'grid',\n          styles: {\n            cellPadding: 4,\n            fontSize: 10,\n            overflow: 'linebreak',\n            lineColor: [44, 62, 80],\n            fillColor: [255, 255, 255],\n            textColor: [0, 0, 0],\n            halign: 'left',\n            valign: 'middle'\n          },\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: [255, 255, 255],\n            fontSize: 12,\n            halign: 'center'\n          },\n          columnStyles: {\n            0: {\n              cellWidth: 'auto'\n            },\n            1: {\n              cellWidth: 40\n            },\n            2: {\n              cellWidth: 40\n            },\n            3: {\n              cellWidth: 40\n            },\n            4: {\n              cellWidth: 40\n            }\n          }\n        });\n        yPosition = doc.lastAutoTable.finalY + 10;\n      });\n    }\n    doc.save(\"expense_planner.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Travel Toes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your ultimate expense tracker and budget management tool.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Country\",\n        value: country,\n        onChange: e => setCountry(e.target.value),\n        className: \"form-control m-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"State\",\n        value: state,\n        onChange: e => setState(e.target.value),\n        className: \"form-control m-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), cities.map((cityObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          placeholder: \"City\",\n          value: cityObj.city,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"places\",\n          placeholder: \"List of Places (comma-separated)\",\n          value: cityObj.places,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"totalBudget\",\n          placeholder: \"Total Budget\",\n          value: cityObj.totalBudget,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"days\",\n          placeholder: \"Number of Days\",\n          value: cityObj.days,\n          onChange: e => handleCityChange(index, e),\n          className: \"form-control m-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info m-2\",\n        onClick: handleAddCity,\n        children: \"Add Another City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success m-2\",\n        onClick: handleGeneratePlanner,\n        children: \"Generate Expense Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), expensePlan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-plan mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expense Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), expensePlan.map((cityObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-expense mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [cityObj.city, \" - Total Budget: \\u20B9\", cityObj.totalBudget, \" for \", cityObj.days, \" Days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), cityObj.places.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"place-expense\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [place.name, \" - Total Budget for Place: \\u20B9\", place.totalPlaceBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Transport: \\u20B9\", place.transportBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Food: \\u20B9\", place.foodBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Activities: \\u20B9\", place.activitiesBudget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: handleDownloadPDF,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/expense-tracker\",\n        className: \"btn btn-primary m-2\",\n        children: \"Go to Expense Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/budget\",\n        className: \"btn btn-secondary m-2\",\n        children: \"Go to Budget Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"l/aWMCTraWWSNli3KTe25Q+7EzU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsPDF","axios","jsxDEV","_jsxDEV","Home","_s","country","setCountry","state","setState","cities","setCities","city","places","totalBudget","days","expensePlan","setExpensePlan","budgetPercentages","transport","food","activities","get","then","response","data","catch","error","console","handleAddCity","handleCityChange","index","event","newCities","target","name","value","handleGeneratePlanner","plan","map","cityObj","parseFloat","numberOfDays","parseInt","perDayBudget","toFixed","transportBudget","foodBudget","activitiesBudget","placesArray","split","place","trim","perPlaceBudget","length","placesBudgetDetails","totalPlaceBudget","post","log","handleDownloadPDF","doc","setFont","setFontSize","text","yPosition","forEach","tableData","autoTable","head","body","startY","theme","styles","cellPadding","fontSize","overflow","lineColor","fillColor","textColor","halign","valign","headStyles","columnStyles","cellWidth","lastAutoTable","finalY","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","onClick","i","to","_c","$RefreshReg$"],"sources":["/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport axios from 'axios';\n\nconst Home = () => {\n  const [country, setCountry] = useState('');\n  const [state, setState] = useState('');\n  const [cities, setCities] = useState([{ city: '', places: '', totalBudget: '', days: '' }]);\n  const [expensePlan, setExpensePlan] = useState(null);\n\n  const budgetPercentages = {\n    transport: 0.3,\n    food: 0.3,\n    activities: 0.4\n  };\n\n  // Fetch expense plan from the backend on mount\n  useEffect(() => {\n    axios.get('/api/expense-plan')\n      .then(response => {\n        setExpensePlan(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching expense plan:', error);\n      });\n  }, []);\n\n  const handleAddCity = () => {\n    setCities([...cities, { city: '', places: '', totalBudget: '', days: '' }]);\n  };\n\n  const handleCityChange = (index, event) => {\n    const newCities = [...cities];\n    newCities[index][event.target.name] = event.target.value;\n    setCities(newCities);\n  };\n\n  const handleGeneratePlanner = () => {\n    const plan = cities.map(cityObj => {\n      const totalBudget = parseFloat(cityObj.totalBudget || 0);\n      const numberOfDays = parseInt(cityObj.days || 1, 10);\n      const perDayBudget = (totalBudget / numberOfDays).toFixed(2);\n\n      const transportBudget = (perDayBudget * budgetPercentages.transport).toFixed(2);\n      const foodBudget = (perDayBudget * budgetPercentages.food).toFixed(2);\n      const activitiesBudget = (perDayBudget * budgetPercentages.activities).toFixed(2);\n\n      const placesArray = cityObj.places.split(',').map(place => place.trim());\n      const perPlaceBudget = (totalBudget / placesArray.length).toFixed(2);\n\n      const placesBudgetDetails = placesArray.map(place => ({\n        name: place,\n        totalPlaceBudget: perPlaceBudget,\n        transportBudget: (perPlaceBudget * budgetPercentages.transport).toFixed(2),\n        foodBudget: (perPlaceBudget * budgetPercentages.food).toFixed(2),\n        activitiesBudget: (perPlaceBudget * budgetPercentages.activities).toFixed(2)\n      }));\n\n      return {\n        city: cityObj.city,\n        totalBudget: totalBudget.toFixed(2),\n        days: numberOfDays,\n        transportBudget,\n        foodBudget,\n        activitiesBudget,\n        places: placesBudgetDetails\n      };\n    });\n\n    // Save the expense plan in the database\n    axios.post('/api/save-expense-plan', { country, state, plan })\n      .then(response => {\n        console.log('Expense plan saved successfully');\n        setExpensePlan(plan);\n      })\n      .catch(error => {\n        console.error('Error saving expense plan:', error);\n      });\n  };\n\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(14);\n    doc.text(\"Expense Planner\", 14, 20);\n\n    let yPosition = 30;\n\n    if (expensePlan) {\n      expensePlan.forEach(cityObj => {\n        doc.setFontSize(12);\n        doc.text(`${cityObj.city} - Total Budget: ₹${cityObj.totalBudget} for ${cityObj.days} Days`, 14, yPosition);\n        yPosition += 10;\n\n        const tableData = cityObj.places.map(place => [\n          place.name,\n          `₹${place.totalPlaceBudget}`,\n          `₹${place.transportBudget}`,\n          `₹${place.foodBudget}`,\n          `₹${place.activitiesBudget}`\n        ]);\n\n        doc.autoTable({\n          head: [['Place Name', 'Total Budget', 'Transport', 'Food', 'Activities']],\n          body: tableData,\n          startY: yPosition,\n          theme: 'grid',\n          styles: {\n            cellPadding: 4,\n            fontSize: 10,\n            overflow: 'linebreak',\n            lineColor: [44, 62, 80],\n            fillColor: [255, 255, 255],\n            textColor: [0, 0, 0],\n            halign: 'left',\n            valign: 'middle'\n          },\n          headStyles: {\n            fillColor: [52, 152, 219],\n            textColor: [255, 255, 255],\n            fontSize: 12,\n            halign: 'center',\n          },\n          columnStyles: {\n            0: { cellWidth: 'auto' },\n            1: { cellWidth: 40 },\n            2: { cellWidth: 40 },\n            3: { cellWidth: 40 },\n            4: { cellWidth: 40 },\n          },\n        });\n\n        yPosition = doc.lastAutoTable.finalY + 10;\n      });\n    }\n\n    doc.save(\"expense_planner.pdf\");\n  };\n\n  return (\n    <div className=\"text-center\">\n      <h1>Welcome to Travel Toes</h1>\n      <p>Your ultimate expense tracker and budget management tool.</p>\n\n      <div className=\"input-form\">\n        <input \n          type=\"text\" \n          placeholder=\"Country\" \n          value={country} \n          onChange={(e) => setCountry(e.target.value)} \n          className=\"form-control m-2\"\n        />\n        <input \n          type=\"text\" \n          placeholder=\"State\" \n          value={state} \n          onChange={(e) => setState(e.target.value)} \n          className=\"form-control m-2\"\n        />\n\n        {cities.map((cityObj, index) => (\n          <div key={index} className=\"city-input\">\n            <input \n              type=\"text\" \n              name=\"city\"\n              placeholder=\"City\" \n              value={cityObj.city} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n            <input \n              type=\"text\" \n              name=\"places\"\n              placeholder=\"List of Places (comma-separated)\" \n              value={cityObj.places} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n            <input \n              type=\"number\" \n              name=\"totalBudget\"\n              placeholder=\"Total Budget\" \n              value={cityObj.totalBudget} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n            <input \n              type=\"number\" \n              name=\"days\"\n              placeholder=\"Number of Days\" \n              value={cityObj.days} \n              onChange={(e) => handleCityChange(index, e)} \n              className=\"form-control m-2\"\n            />\n          </div>\n        ))}\n\n        <button className=\"btn btn-info m-2\" onClick={handleAddCity}>\n          Add Another City\n        </button>\n\n        <button className=\"btn btn-success m-2\" onClick={handleGeneratePlanner}>\n          Generate Expense Planner\n        </button>\n      </div>\n\n      {expensePlan && (\n        <div className=\"expense-plan mt-4\">\n          <h3>Expense Planner</h3>\n          {expensePlan.map((cityObj, index) => (\n            <div key={index} className=\"city-expense mb-4\">\n              <h4>{cityObj.city} - Total Budget: ₹{cityObj.totalBudget} for {cityObj.days} Days</h4>\n\n              {cityObj.places.map((place, i) => (\n                <div key={i} className=\"place-expense\">\n                  <h5>\n                    {place.name} - Total Budget for Place: ₹{place.totalPlaceBudget}\n                  </h5>\n                  <p>Transport: ₹{place.transportBudget}</p>\n                  <p>Food: ₹{place.foodBudget}</p>\n                  <p>Activities: ₹{place.activitiesBudget}</p>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          <button className=\"btn btn-primary m-2\" onClick={handleDownloadPDF}>\n            Download PDF\n          </button>\n        </div>\n      )}\n\n      <div className=\"navigation-buttons mt-5\">\n        <Link to=\"/expense-tracker\" className=\"btn btn-primary m-2\">\n          Go to Expense Tracker\n        </Link>\n        <Link to=\"/budget\" className=\"btn btn-secondary m-2\">\n          Go to Budget Management\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}