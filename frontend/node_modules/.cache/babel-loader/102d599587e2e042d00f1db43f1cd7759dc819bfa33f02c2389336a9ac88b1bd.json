{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/ExpenseTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Filler, Tooltip, Legend, ArcElement } from 'chart.js';\n\n// Register the necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Filler, Tooltip, Legend, ArcElement);\nconst ExpenseTracker = ({\n  userId\n}) => {\n  _s();\n  const [date, setDate] = useState('');\n  const [expenses, setExpenses] = useState({});\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [category, setCategory] = useState('Food');\n  const [customCategory, setCustomCategory] = useState('');\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const [dates, setDates] = useState([new Date().toISOString().split(\"T\")[0]]); // Set initial date to today\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch expenses');\n        }\n        const data = await response.json();\n        setExpenses(data.expenses);\n        setTotalExpenses(data.totalExpenses);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n    fetchExpenses();\n  }, [userId]);\n  const handleDateChange = event => {\n    setDate(event.target.value);\n  };\n  const handleAddDate = () => {\n    const nextDate = new Date(dates[dates.length - 1]);\n    nextDate.setDate(nextDate.getDate() + 1); // Add one day\n    const formattedDate = nextDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\n    setDates([...dates, formattedDate]);\n    setDate(formattedDate); // Set new date to the selected date\n  };\n  const handleAddExpense = async event => {\n    event.preventDefault();\n    const amountValue = parseFloat(amount);\n    const categoryToUse = category === 'Other' ? customCategory : category;\n    if (date && !isNaN(amountValue) && categoryToUse) {\n      const newExpenses = {\n        ...expenses\n      };\n      if (!newExpenses[date]) {\n        newExpenses[date] = [];\n      }\n      if (editingExpense) {\n        const previousAmount = newExpenses[editingExpense.date][editingExpense.index].amount;\n        newExpenses[editingExpense.date][editingExpense.index] = {\n          amount: amountValue,\n          category: categoryToUse\n        };\n        setEditingExpense(null);\n        setTotalExpenses(prevTotal => prevTotal - previousAmount + amountValue);\n      } else {\n        newExpenses[date].push({\n          amount: amountValue,\n          category: categoryToUse\n        });\n        setTotalExpenses(prevTotal => prevTotal + amountValue);\n      }\n      setExpenses(newExpenses);\n\n      // Save to backend (create or update)\n      const savedExpense = await saveExpenseToBackend({\n        date,\n        amount: amountValue,\n        category: categoryToUse\n      });\n      if (savedExpense) {\n        resetForm();\n      }\n    } else {\n      console.error('Missing required fields');\n    }\n  };\n  const saveExpenseToBackend = async expense => {\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: editingExpense ? 'PUT' : 'POST',\n        // Use POST for create, PUT for update\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(expense)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save expense');\n      }\n      return await response.json(); // Optionally return the saved expense data\n    } catch (error) {\n      console.error('Error saving expense:', error);\n    }\n  };\n  const handleEditExpense = (date, index) => {\n    const expenseToEdit = expenses[date][index];\n    setEditingExpense({\n      date,\n      index\n    });\n    setAmount(expenseToEdit.amount);\n    setCategory(expenseToEdit.category);\n    if (expenseToEdit.category === 'Other') {\n      setCustomCategory(expenseToEdit.category);\n    } else {\n      setCustomCategory('');\n    }\n  };\n  const handleDeleteExpense = async (date, index) => {\n    const expenseToDelete = expenses[date][index];\n    const updatedExpenses = {\n      ...expenses\n    };\n    updatedExpenses[date].splice(index, 1); // Remove the selected expense\n\n    // Update the total expenses\n    setTotalExpenses(prevTotal => prevTotal - expenseToDelete.amount);\n    setExpenses(updatedExpenses);\n\n    // Delete from backend\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date,\n          amount: expenseToDelete.amount,\n          category: expenseToDelete.category\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete expense');\n      }\n    } catch (error) {\n      console.error('Error deleting expense:', error);\n    }\n  };\n  const resetForm = () => {\n    setAmount(0);\n    setCategory('Food');\n    setCustomCategory('');\n    setEditingExpense(null);\n    setDate('');\n  };\n  const dailyTotals = Object.entries(expenses).map(([date, expenseList]) => {\n    const dailyTotal = expenseList.reduce((sum, expense) => sum + expense.amount, 0);\n    return {\n      date,\n      total: dailyTotal,\n      expenses: expenseList\n    };\n  });\n  const lineChartData = {\n    labels: dailyTotals.map(entry => entry.date),\n    datasets: [{\n      label: 'Daily Spending',\n      data: dailyTotals.map(entry => entry.total),\n      fill: true,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      tension: 0.4\n    }]\n  };\n  const categoryTotals = {};\n  dailyTotals.forEach(entry => {\n    entry.expenses.forEach(expense => {\n      if (categoryTotals[expense.category]) {\n        categoryTotals[expense.category] += expense.amount;\n      } else {\n        categoryTotals[expense.category] = expense.amount;\n      }\n    });\n  });\n  const pieChartData = {\n    labels: Object.keys(categoryTotals),\n    datasets: [{\n      label: 'Category Spending Breakdown',\n      data: Object.values(categoryTotals),\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)']\n    }]\n  };\n  const chartOptions = {\n    maintainAspectRatio: false\n  };\n  const tips = ['Create a daily budget and stick to it.', 'Track all your expenses in real time.', 'Limit impulse spending by categorizing expenses.', 'Review your spending at the end of each day.', 'Use cashback and rewards programs to save money.'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: handleDateChange,\n        className: \"form-control d-inline-block\",\n        style: {\n          width: 'auto'\n        } // To limit input width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary ms-2\",\n        onClick: handleAddDate,\n        children: \"Add Next Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), date && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddExpense,\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Expense Amount\",\n          required: true,\n          className: \"form-control\",\n          value: amount || '',\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          value: category,\n          onChange: e => {\n            const selectedCategory = e.target.value;\n            setCategory(selectedCategory);\n            setCustomCategory(selectedCategory === 'Other' ? '' : '');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Food\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Transport\",\n            children: \"Transport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Accommodation\",\n            children: \"Accommodation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), category === 'Other' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Custom Category\",\n          className: \"form-control\",\n          value: customCategory,\n          onChange: e => setCustomCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: editingExpense ? 'Update Expense' : 'Add Expense'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), dailyTotals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Daily Expense Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: dailyTotals.map(({\n          date,\n          total,\n          expenses\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), \": \\u20B9\", total.toFixed(2), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: expenses.map((expense, expIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [expense.category, \": \\u20B9\", expense.amount.toFixed(2), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link ms-2\",\n                onClick: () => handleEditExpense(date, expIndex),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link text-danger ms-2\",\n                onClick: () => handleDeleteExpense(date, expIndex),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this)]\n            }, expIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Expenses: \\u20B9\", totalExpenses.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Spending Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: lineChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Category Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tips for Better Expense Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: tips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: tip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseTracker, \"8vN4EY4+6fIgA1i4nirMkdK7DDA=\");\n_c = ExpenseTracker;\nexport default ExpenseTracker;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTracker\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Filler","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","ExpenseTracker","userId","_s","date","setDate","expenses","setExpenses","totalExpenses","setTotalExpenses","category","setCategory","customCategory","setCustomCategory","editingExpense","setEditingExpense","amount","setAmount","dates","setDates","Date","toISOString","split","fetchExpenses","response","fetch","ok","Error","data","json","error","console","handleDateChange","event","target","value","handleAddDate","nextDate","length","getDate","formattedDate","handleAddExpense","preventDefault","amountValue","parseFloat","categoryToUse","isNaN","newExpenses","previousAmount","index","prevTotal","push","savedExpense","saveExpenseToBackend","resetForm","expense","method","headers","body","JSON","stringify","handleEditExpense","expenseToEdit","handleDeleteExpense","expenseToDelete","updatedExpenses","splice","dailyTotals","Object","entries","map","expenseList","dailyTotal","reduce","sum","total","lineChartData","labels","entry","datasets","label","fill","borderColor","backgroundColor","tension","categoryTotals","forEach","pieChartData","keys","values","chartOptions","maintainAspectRatio","tips","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","width","onClick","onSubmit","placeholder","required","e","selectedCategory","toFixed","expIndex","height","options","tip","_c","$RefreshReg$"],"sources":["/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/ExpenseTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\n\n// Register the necessary components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nconst ExpenseTracker = ({ userId }) => {\n  const [date, setDate] = useState('');\n  const [expenses, setExpenses] = useState({});\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [category, setCategory] = useState('Food');\n  const [customCategory, setCustomCategory] = useState('');\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const [dates, setDates] = useState([new Date().toISOString().split(\"T\")[0]]); // Set initial date to today\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const response = await fetch(`/api/expenses/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch expenses');\n        }\n        const data = await response.json();\n        setExpenses(data.expenses);\n        setTotalExpenses(data.totalExpenses);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n\n    fetchExpenses();\n  }, [userId]);\n\n  const handleDateChange = (event) => {\n    setDate(event.target.value);\n  };\n\n  const handleAddDate = () => {\n    const nextDate = new Date(dates[dates.length - 1]);\n    nextDate.setDate(nextDate.getDate() + 1); // Add one day\n    const formattedDate = nextDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\n    setDates([...dates, formattedDate]);\n    setDate(formattedDate); // Set new date to the selected date\n  };\n\n  const handleAddExpense = async (event) => {\n    event.preventDefault();\n    const amountValue = parseFloat(amount);\n    const categoryToUse = category === 'Other' ? customCategory : category;\n\n    if (date && !isNaN(amountValue) && categoryToUse) {\n      const newExpenses = { ...expenses };\n      if (!newExpenses[date]) {\n        newExpenses[date] = [];\n      }\n\n      if (editingExpense) {\n        const previousAmount = newExpenses[editingExpense.date][editingExpense.index].amount;\n        newExpenses[editingExpense.date][editingExpense.index] = {\n          amount: amountValue,\n          category: categoryToUse,\n        };\n        setEditingExpense(null);\n        setTotalExpenses(prevTotal => prevTotal - previousAmount + amountValue);\n      } else {\n        newExpenses[date].push({ amount: amountValue, category: categoryToUse });\n        setTotalExpenses(prevTotal => prevTotal + amountValue);\n      }\n\n      setExpenses(newExpenses);\n\n      // Save to backend (create or update)\n      const savedExpense = await saveExpenseToBackend({ date, amount: amountValue, category: categoryToUse });\n      if (savedExpense) {\n        resetForm();\n      }\n    } else {\n      console.error('Missing required fields');\n    }\n  };\n\n  const saveExpenseToBackend = async (expense) => {\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: editingExpense ? 'PUT' : 'POST',  // Use POST for create, PUT for update\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(expense),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save expense');\n      }\n\n      return await response.json(); // Optionally return the saved expense data\n    } catch (error) {\n      console.error('Error saving expense:', error);\n    }\n  };\n\n  const handleEditExpense = (date, index) => {\n    const expenseToEdit = expenses[date][index];\n    setEditingExpense({ date, index });\n    setAmount(expenseToEdit.amount);\n    setCategory(expenseToEdit.category);\n    if (expenseToEdit.category === 'Other') {\n      setCustomCategory(expenseToEdit.category);\n    } else {\n      setCustomCategory('');\n    }\n  };\n\n  const handleDeleteExpense = async (date, index) => {\n    const expenseToDelete = expenses[date][index];\n    const updatedExpenses = { ...expenses };\n    updatedExpenses[date].splice(index, 1);  // Remove the selected expense\n\n    // Update the total expenses\n    setTotalExpenses(prevTotal => prevTotal - expenseToDelete.amount);\n    setExpenses(updatedExpenses);\n\n    // Delete from backend\n    try {\n      const response = await fetch(`/api/expenses/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ date, amount: expenseToDelete.amount, category: expenseToDelete.category }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete expense');\n      }\n    } catch (error) {\n      console.error('Error deleting expense:', error);\n    }\n  };\n\n  const resetForm = () => {\n    setAmount(0);\n    setCategory('Food');\n    setCustomCategory('');\n    setEditingExpense(null);\n    setDate('');\n  };\n\n  const dailyTotals = Object.entries(expenses).map(([date, expenseList]) => {\n    const dailyTotal = expenseList.reduce((sum, expense) => sum + expense.amount, 0);\n    return { date, total: dailyTotal, expenses: expenseList };\n  });\n\n  const lineChartData = {\n    labels: dailyTotals.map(entry => entry.date),\n    datasets: [\n      {\n        label: 'Daily Spending',\n        data: dailyTotals.map(entry => entry.total),\n        fill: true,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const categoryTotals = {};\n  dailyTotals.forEach(entry => {\n    entry.expenses.forEach(expense => {\n      if (categoryTotals[expense.category]) {\n        categoryTotals[expense.category] += expense.amount;\n      } else {\n        categoryTotals[expense.category] = expense.amount;\n      }\n    });\n  });\n\n  const pieChartData = {\n    labels: Object.keys(categoryTotals),\n    datasets: [\n      {\n        label: 'Category Spending Breakdown',\n        data: Object.values(categoryTotals),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.6)',\n          'rgba(54, 162, 235, 0.6)',\n          'rgba(255, 206, 86, 0.6)',\n          'rgba(75, 192, 192, 0.6)',\n          'rgba(153, 102, 255, 0.6)',\n          'rgba(255, 159, 64, 0.6)',\n        ],\n      },\n    ],\n  };\n\n  const chartOptions = {\n    maintainAspectRatio: false,\n  };\n\n  const tips = [\n    'Create a daily budget and stick to it.',\n    'Track all your expenses in real time.',\n    'Limit impulse spending by categorizing expenses.',\n    'Review your spending at the end of each day.',\n    'Use cashback and rewards programs to save money.',\n  ];\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"text-center mb-4\">Expense Tracker</h2>\n\n      <div className=\"mb-4 text-center\">\n        <input\n          type=\"date\"\n          value={date}\n          onChange={handleDateChange}\n          className=\"form-control d-inline-block\"\n          style={{ width: 'auto' }} // To limit input width\n        />\n        <button className=\"btn btn-secondary ms-2\" onClick={handleAddDate}>\n          Add Next Date\n        </button>\n      </div>\n\n      {date && (\n        <form onSubmit={handleAddExpense} className=\"text-center\">\n          <div className=\"mb-3\">\n            <input\n              type=\"number\"\n              placeholder=\"Expense Amount\"\n              required\n              className=\"form-control\"\n              value={amount || ''}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <select\n              className=\"form-select\"\n              value={category}\n              onChange={(e) => {\n                const selectedCategory = e.target.value;\n                setCategory(selectedCategory);\n                setCustomCategory(selectedCategory === 'Other' ? '' : '');\n              }}\n            >\n              <option value=\"Food\">Food</option>\n              <option value=\"Transport\">Transport</option>\n              <option value=\"Accommodation\">Accommodation</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n\n          {category === 'Other' && (\n            <div className=\"mb-3\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter Custom Category\"\n                className=\"form-control\"\n                value={customCategory}\n                onChange={(e) => setCustomCategory(e.target.value)}\n              />\n            </div>\n          )}\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {editingExpense ? 'Update Expense' : 'Add Expense'}\n          </button>\n        </form>\n      )}\n\n      {dailyTotals.length > 0 && (\n        <div className=\"mt-4\">\n          <h4>Daily Expense Summary</h4>\n          <ul className=\"list-group\">\n            {dailyTotals.map(({ date, total, expenses }) => (\n              <li key={date} className=\"list-group-item\">\n                <strong>{date}</strong>: ₹{total.toFixed(2)}\n                <ul>\n                  {expenses.map((expense, expIndex) => (\n                    <li key={expIndex}>\n                      {expense.category}: ₹{expense.amount.toFixed(2)}\n                      <button\n                        className=\"btn btn-link ms-2\"\n                        onClick={() => handleEditExpense(date, expIndex)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-link text-danger ms-2\"\n                        onClick={() => handleDeleteExpense(date, expIndex)}\n                      >\n                        Delete\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"mt-4\">\n        <h4>Total Expenses: ₹{totalExpenses.toFixed(2)}</h4>\n      </div>\n\n      <div className=\"mt-4\">\n        <h4>Spending Trends</h4>\n        <div style={{ height: '300px' }}>\n          <Line data={lineChartData} options={chartOptions} />\n        </div>\n      </div>\n\n      <div className=\"mt-4\">\n        <h4>Category Breakdown</h4>\n        <div style={{ height: '300px' }}>\n          <Pie data={pieChartData} options={chartOptions} />\n        </div>\n      </div>\n\n      <div className=\"mt-4\">\n        <h4>Tips for Better Expense Management</h4>\n        <div className=\"row justify-content-center\">\n          {tips.map((tip, index) => (\n            <div key={index} className=\"col-md-4\">\n              <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                  <p className=\"card-text\">{tip}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}