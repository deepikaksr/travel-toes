{"ast":null,"code":"var _jsxFileName = \"/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/AnimatedBudgetChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst AnimatedBudgetChart = ({\n  budgets,\n  calculateAmountSpent\n}) => {\n  _s();\n  const [opacity, setOpacity] = useState(0.6);\n  const [ascending, setAscending] = useState(true);\n  useEffect(() => {\n    const animationInterval = setInterval(() => {\n      setOpacity(prev => {\n        if (ascending) {\n          if (prev >= 0.8) setAscending(false);\n          return prev + 0.01;\n        } else {\n          if (prev <= 0.4) setAscending(true);\n          return prev - 0.01;\n        }\n      });\n    }, 50);\n    return () => clearInterval(animationInterval);\n  }, [ascending]);\n  const chartData = {\n    labels: budgets.map(budget => (budget === null || budget === void 0 ? void 0 : budget.category) || 'Unknown'),\n    datasets: [{\n      label: 'Budget Amount',\n      data: budgets.map(budget => Number(budget === null || budget === void 0 ? void 0 : budget.amount) || 0),\n      backgroundColor: `rgba(75, 192, 192, ${opacity})`,\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }, {\n      label: 'Actual Spending',\n      data: budgets.map(budget => calculateAmountSpent(budget === null || budget === void 0 ? void 0 : budget.category)),\n      backgroundColor: `rgba(255, 99, 132, ${opacity})`,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    aspectRatio: 2,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Budget vs. Spending by Category',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        }\n      }\n    },\n    animation: {\n      duration: 2000,\n      easing: 'easeInOutQuart'\n    },\n    transitions: {\n      active: {\n        animation: {\n          duration: 400\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    },\n    onHover: (event, chartElement) => {\n      event.native.target.style.cursor = chartElement[0] ? 'pointer' : 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions,\n      className: \"hover:shadow-lg transition-shadow duration-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBudgetChart, \"leRmnPQhc1PJDTfVGPQeZGYerUM=\");\n_c = AnimatedBudgetChart;\nexport default AnimatedBudgetChart;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBudgetChart\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","AnimatedBudgetChart","budgets","calculateAmountSpent","_s","opacity","setOpacity","ascending","setAscending","animationInterval","setInterval","prev","clearInterval","chartData","labels","map","budget","category","datasets","label","data","Number","amount","backgroundColor","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","aspectRatio","plugins","legend","position","title","display","text","font","size","weight","scales","y","beginAtZero","grid","color","x","animation","duration","easing","transitions","active","interaction","intersect","mode","onHover","event","chartElement","native","target","style","cursor","className","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/deepika/Desktop/PROJECTS/travel-toes/frontend/src/pages/AnimatedBudgetChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst AnimatedBudgetChart = ({ budgets, calculateAmountSpent }) => {\n  const [opacity, setOpacity] = useState(0.6);\n  const [ascending, setAscending] = useState(true);\n\n  useEffect(() => {\n    const animationInterval = setInterval(() => {\n      setOpacity(prev => {\n        if (ascending) {\n          if (prev >= 0.8) setAscending(false);\n          return prev + 0.01;\n        } else {\n          if (prev <= 0.4) setAscending(true);\n          return prev - 0.01;\n        }\n      });\n    }, 50);\n\n    return () => clearInterval(animationInterval);\n  }, [ascending]);\n\n  const chartData = {\n    labels: budgets.map(budget => budget?.category || 'Unknown'),\n    datasets: [\n      {\n        label: 'Budget Amount',\n        data: budgets.map(budget => Number(budget?.amount) || 0),\n        backgroundColor: `rgba(75, 192, 192, ${opacity})`,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n      {\n        label: 'Actual Spending',\n        data: budgets.map(budget => calculateAmountSpent(budget?.category)),\n        backgroundColor: `rgba(255, 99, 132, ${opacity})`,\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    aspectRatio: 2,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Budget vs. Spending by Category',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        }\n      }\n    },\n    animation: {\n      duration: 2000,\n      easing: 'easeInOutQuart',\n    },\n    transitions: {\n      active: {\n        animation: {\n          duration: 400\n        }\n      }\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index',\n    },\n    onHover: (event, chartElement) => {\n      event.native.target.style.cursor = chartElement[0] ? 'pointer' : 'default';\n    },\n  };\n\n  return (\n    <div className=\"relative\">\n      <Bar data={chartData} options={chartOptions} className=\"hover:shadow-lg transition-shadow duration-300\" />\n    </div>\n  );\n};\n\nexport default AnimatedBudgetChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}